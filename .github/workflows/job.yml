name: Deploy QA

on:
  issue_comment:
    types: [created]

permissions:
  id-token: write
  contents: read
  pull-requests: write
  deployments: write

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/start')
    outputs:
      head_sha: ${{ steps.find-sha.outputs.result }}

    steps:
    - name: Create a reaction
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.reactions.createForIssueComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: context.payload.comment.id,
            content: "+1",
          });

    - name: Add QA label
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            labels: [
              'QA',
            ],
          });

    - name: Find sha from pull request
      id: find-sha
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          const { data: pullRequest } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number,
          });
          return pullRequest.head.sha;
  # イメージをビルドする。
  # QA環境ではlatestイメージを更新しない。
  build_image:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [setup]

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ needs.setup.outputs.head_sha }}
    
    - name: Create a deployment
      run: exit 1

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [setup, build_image]

    steps:
    - name: Create a deployment
      run: echo 'test'
  
  notify-failure:
    runs-on: ubuntu-latest
    needs: [setup, build_image, deploy]
    if: failure()
    env:
      PR_NUMBER: ${{ github.event.issue.number }}
    steps:
    - name: Notification Failure
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_TITLE: 'QAデプロイ失敗通知'
        SLACK_COLOR: '#dc143c'
        SLACK_WEBHOOK: ${{ secrets.QA_SLACK_WEBHOOK_URL }}
        SLACK_MESSAGE: |
          QA環境デプロイに失敗しました。
          PR: https://github.com/AVA-Intelligence-Inc/ava-travel-frontend/pull/${{ env.PR_NUMBER }}